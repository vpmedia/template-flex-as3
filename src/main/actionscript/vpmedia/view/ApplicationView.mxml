<?xml version="1.0" encoding="utf-8"?>
<!--
  - =BEGIN CLOSED LICENSE
  -
  -  Copyright(c) 2014 Andras Csizmadia.
  -  http://www.vpmedia.eu
  -
  -  For information about the licensing and copyright please
  -  contact Andras Csizmadia at andras@vpmedia.eu.
  -
  -  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  -  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  -  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  -  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  -  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  -  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  -  THE SOFTWARE.
  -
  - =END CLOSED LICENSE
  -->
<mx:ViewStack xmlns:fx="http://ns.adobe.com/mxml/2009"
              xmlns:s="library://ns.adobe.com/flex/spark"
              xmlns:mx="library://ns.adobe.com/flex/mx"
              width="100%"
              height="100%"
              resizeToContent="false"
              selectedIndex="0">

    <fx:Script>
        <![CDATA[
            import mx.binding.utils.ChangeWatcher;
            import mx.core.Container;
            import mx.core.FlexGlobals;
            import mx.events.PropertyChangeEvent;

            import vpmedia.event.ApplicationEvent;
            import vpmedia.model.ApplicationModel;

            private var viewStateWatcher:ChangeWatcher=ChangeWatcher.watch(FlexGlobals.topLevelApplication._model, "view_state", onViewStateChange);

            /**
             * @private
             * <p>Description: View state change listener</p>
             */
            private function onViewStateChange(event:PropertyChangeEvent):void
            {
                trace(this, "onViewStateChange");

                var currentState:String=FlexGlobals.topLevelApplication._model.view_state;
                switch (currentState)
                {
                    case "init":
                        selectedIndex=0;
                        break;
                    case "main":
                        selectedIndex=1;
                        break;
                    case "error":
                        selectedIndex=2;
                        break;
                }
                //systemManager.dispatchEvent( new ApplicationEvent( ApplicationEvent.STATE_CHANGE ) );
            }
        ]]>
    </fx:Script>

    <s:NavigatorContent id="init"
                        label="init"
                        width="100%"
                        height="100%">
        <s:HGroup width="100%"
                  height="100%">
            <s:Label text="Initializing.."/>
        </s:HGroup>
    </s:NavigatorContent>

    <s:NavigatorContent id="main"
                        label="Main"
                        width="100%"
                        height="100%">
        <s:HGroup width="100%"
                  height="100%">
            <s:Label text="Main"/>
        </s:HGroup>
    </s:NavigatorContent>

    <s:NavigatorContent id="error"
                        label="Error"
                        width="100%"
                        height="100%">
        <s:HGroup width="100%"
                  height="100%">
            <s:Label text="Error"/>
        </s:HGroup>
    </s:NavigatorContent>

</mx:ViewStack>
